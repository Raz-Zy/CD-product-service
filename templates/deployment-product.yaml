apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-product
  namespace: {{ .Values.namespace }}
spec:
  serviceName: postgres-product
  replicas: 1
  selector:
    matchLabels:
      app: postgres-product
  template:
    metadata:
      labels:
        app: postgres-product
    spec:
      securityContext:
        fsGroup: 999
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - name: postgres
              containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: product-db-config
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: product-db-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: product-db-secret
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command: ["sh","-c","pg_isready -U $POSTGRES_USER"]
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            exec:
              command: ["sh","-c","pg_isready -U $POSTGRES_USER"]
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: product-postgres-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-api
  namespace: {{ .Values.namespace }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: product-api
  template:
    metadata:
      labels:
        app: product-api
    spec:
      containers:
        - name: app
          image: "{{ .Values.image.imageRepository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8082
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-product.{{ .Values.namespace }}.svc.cluster.local:5432/product_db
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: product-db-secret
                  key: SPRING_DATASOURCE_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: product-db-secret
                  key: SPRING_DATASOURCE_PASSWORD
            - name: FEIGN_PRODUCT_URL
              value: http://category-api.category-db.svc.cluster.local:8081/api/v1/categories